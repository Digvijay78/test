{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakshya\\\\Desktop\\\\Web (self)\\\\React\\\\food-app\\\\src\\\\context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?f=a';\n  const randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const data = 'https://randomuser.me/api/';\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const fetchMeals = async url => {\n    setLoading(true);\n    try {\n      // const response = await axios(url)\n      const {\n        data\n      } = await axios(url);\n      if (data.meals) {\n        setMeals(data.meals);\n      } else {\n        setMeals([]);\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n    setLoading(false);\n  };\n\n  // const fetchData = async() =>{\n  //     try{\n  //         const response = await fetch('https://randomuser.me/api/')\n  //         const data = await response.json();\n  //         // console.log(data);\n  //     }\n  //     catch(error){\n  //         console.log(error);\n  //     }\n  // }\n\n  useEffect(() => {\n    fetchMeals(allMealsUrl);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      meals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"wQ0i3cPKPhRyDqnTARN1Qjo5ULI=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","AppContext","createContext","AppProvider","children","allMealsUrl","randomMealUrl","data","meals","setMeals","loading","setLoading","fetchMeals","url","error","console","log","response","useGlobalContext"],"sources":["C:/Users/lakshya/Desktop/Web (self)/React/food-app/src/context.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst AppProvider = ({ children }) => {\r\n\r\n    const allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?f=a';\r\n    const randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\n    const data = 'https://randomuser.me/api/';\r\n\r\n    const [meals, setMeals] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchMeals = async (url) => {\r\n        setLoading(true)\r\n        try {\r\n            // const response = await axios(url)\r\n            const { data } = await axios(url)\r\n\r\n            if (data.meals) {\r\n                setMeals(data.meals);\r\n\r\n            }\r\n            else {\r\n                setMeals([]);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.response);\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    // const fetchData = async() =>{\r\n    //     try{\r\n    //         const response = await fetch('https://randomuser.me/api/')\r\n    //         const data = await response.json();\r\n    //         // console.log(data);\r\n    //     }\r\n    //     catch(error){\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchMeals(allMealsUrl)\r\n    }, [])\r\n\r\n    return (\r\n        <AppContext.Provider value={{ loading, meals }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\n\r\nexport { AppContext, AppProvider }"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAE7B,MAAMC,WAAW,GAAG,wDAAwD;EAC5E,MAAMC,aAAa,GAAG,oDAAoD;EAC1E,MAAMC,IAAI,GAAG,4BAA4B;EAEzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,UAAU,GAAG,MAAOC,GAAG,IAAK;IAC9BF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA;MACA,MAAM;QAAEJ;MAAK,CAAC,GAAG,MAAMP,KAAK,CAACa,GAAG,CAAC;MAEjC,IAAIN,IAAI,CAACC,KAAK,EAAE;QACZC,QAAQ,CAACF,IAAI,CAACC,KAAK,CAAC;MAExB,CAAC,MACI;QACDC,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CACD,OAAOK,KAAK,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;IAC/B;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAb,SAAS,CAAC,MAAM;IACZc,UAAU,CAACP,WAAW,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEK,OAAO;MAAEF;IAAM,CAAE;IAAA,UAC1CJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE9B,CAAC;AAAA,GAnDKD,WAAW;AAAA,KAAXA,WAAW;AAqDjB,OAAO,MAAMe,gBAAgB,GAAG,MAAM;EAAA;EAClC,OAAOrB,UAAU,CAACI,UAAU,CAAC;AACjC,CAAC;AAAA,IAFYiB,gBAAgB;AAK7B,SAASjB,UAAU,EAAEE,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}