{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakshya\\\\Desktop\\\\Web (self)\\\\React\\\\food-app\\\\src\\\\context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst getFavoritesFromLocalStorage = () => {\n  let favorite = localStorage.getItem(\"favorites\");\n  if (favorites) {}\n};\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n  const randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\n  const data = 'https://randomuser.me/api/';\n  const [meals, setMeals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [selectedMeal, setSelectedMeal] = useState(null);\n  const [favorites, setFavorites] = useState([]);\n  const fetchMeals = async url => {\n    setLoading(true);\n    try {\n      // const response = await axios(url)\n      const {\n        data\n      } = await axios(url);\n      if (data.meals) {\n        setMeals(data.meals);\n      } else {\n        setMeals([]);\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n    setLoading(false);\n  };\n\n  // const fetchData = async() =>{\n  //     try{\n  //         const response = await fetch('https://randomuser.me/api/')\n  //         const data = await response.json();\n  //         // console.log(data);\n  //     }\n  //     catch(error){\n  //         console.log(error);\n  //     }\n  // }\n\n  const fetchRandomMeal = () => {\n    fetchMeals(randomMealUrl);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const addToFavorites = idMeal => {\n    const alreadyFavorite = favorites.find(meal => meal.idMeal === idMeal);\n    if (alreadyFavorite) return;\n    const meal = meals.find(meal => meal.idMeal === idMeal);\n    const updateFavorites = [...favorites, meal];\n    setFavorites(updateFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updateFavorites));\n  };\n  const removeFromFavorites = idMeal => {\n    const updatedFavorites = favorites.filter(meal => meal.idMeal !== idMeal);\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n  };\n  useEffect(() => {\n    fetchMeals(allMealsUrl);\n  }, []);\n  const selectMeal = (idMeal, favouriteMeal) => {\n    let meal;\n    if (favouriteMeal) {\n      meal = favorites.find(meal => meal.idMeal === idMeal);\n    } else {\n      meal = meals.find(meal => meal.idMeal === idMeal);\n    }\n    setSelectedMeal(meal);\n    setShowModal(true);\n  };\n  useEffect(() => {\n    if (!searchTerm) {\n      return;\n    }\n    fetchMeals(`${allMealsUrl}${searchTerm}`);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      meals,\n      setSearchTerm,\n      fetchRandomMeal,\n      showModal,\n      selectedMeal,\n      selectMeal,\n      closeModal,\n      addToFavorites,\n      removeFromFavorites,\n      favorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"RYglrw5rN7YyRea+Lc/qBatRcos=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","AppContext","createContext","getFavoritesFromLocalStorage","favorite","localStorage","getItem","favorites","AppProvider","children","allMealsUrl","randomMealUrl","data","meals","setMeals","loading","setLoading","searchTerm","setSearchTerm","showModal","setShowModal","selectedMeal","setSelectedMeal","setFavorites","fetchMeals","url","error","console","log","response","fetchRandomMeal","closeModal","addToFavorites","idMeal","alreadyFavorite","find","meal","updateFavorites","setItem","JSON","stringify","removeFromFavorites","updatedFavorites","filter","selectMeal","favouriteMeal","useGlobalContext"],"sources":["C:/Users/lakshya/Desktop/Web (self)/React/food-app/src/context.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst AppContext = React.createContext()\r\n\r\nconst getFavoritesFromLocalStorage = () =>{\r\n    let favorite = localStorage.getItem(\"favorites\");\r\n\r\n    if(favorites){\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst AppProvider = ({ children }) => {\r\n\r\n    const allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\r\n    const randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\n    const data = 'https://randomuser.me/api/';\r\n\r\n    const [meals, setMeals] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectedMeal, setSelectedMeal] = useState(null);\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const fetchMeals = async (url) => {\r\n        setLoading(true)\r\n        try {\r\n            // const response = await axios(url)\r\n            const { data } = await axios(url)\r\n\r\n            if (data.meals) {\r\n                setMeals(data.meals);\r\n            }\r\n            else {\r\n                setMeals([]);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.response);\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    // const fetchData = async() =>{\r\n    //     try{\r\n    //         const response = await fetch('https://randomuser.me/api/')\r\n    //         const data = await response.json();\r\n    //         // console.log(data);\r\n    //     }\r\n    //     catch(error){\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    const fetchRandomMeal = () => {\r\n        fetchMeals(randomMealUrl)\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setShowModal(false);\r\n    }\r\n\r\n    const addToFavorites = (idMeal) =>{\r\n        const alreadyFavorite = favorites.find(meal => meal.idMeal === idMeal)\r\n        if(alreadyFavorite) return;\r\n        \r\n        const meal = meals.find(meal => meal.idMeal === idMeal)\r\n        const updateFavorites = [...favorites,meal];\r\n        setFavorites(updateFavorites);\r\n        localStorage.setItem(\"favorites\",JSON.stringify(updateFavorites))\r\n    }\r\n    \r\n    const removeFromFavorites = (idMeal) =>{\r\n        const updatedFavorites = favorites.filter(meal => meal.idMeal !== idMeal);\r\n        setFavorites(updatedFavorites);\r\n        localStorage.setItem(\"favorites\",JSON.stringify(updatedFavorites))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchMeals(allMealsUrl)\r\n\r\n    }, []);\r\n\r\n    const selectMeal = (idMeal , favouriteMeal ) =>{\r\n\r\n        let meal;\r\n        if(favouriteMeal){\r\n            meal = favorites.find( (meal) => meal.idMeal === idMeal)\r\n        }\r\n        else{\r\n            meal = meals.find( (meal) => meal.idMeal === idMeal)\r\n        }\r\n        setSelectedMeal(meal);\r\n        setShowModal(true);\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        if (!searchTerm) {\r\n            return\r\n        }\r\n        fetchMeals(`${allMealsUrl}${searchTerm}`)\r\n    }, [searchTerm])\r\n\r\n    return (\r\n        <AppContext.Provider value={{ loading, meals, setSearchTerm, fetchRandomMeal  , showModal , selectedMeal , selectMeal\r\n        ,closeModal , addToFavorites , removeFromFavorites , favorites  }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\n\r\nexport { AppContext, AppProvider }"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,gBAAGL,KAAK,CAACM,aAAa,EAAE;AAExC,MAAMC,4BAA4B,GAAG,MAAK;EACtC,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAEhD,IAAGC,SAAS,EAAC,CAEb;AACJ,CAAC;AAKD,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAE7B,MAAMC,WAAW,GAAG,uDAAuD;EAC3E,MAAMC,aAAa,GAAG,oDAAoD;EAC1E,MAAMC,IAAI,GAAG,4BAA4B;EAEzC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,SAAS,EAAEgB,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMyB,UAAU,GAAG,MAAOC,GAAG,IAAK;IAC9BT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA;MACA,MAAM;QAAEJ;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACyB,GAAG,CAAC;MAEjC,IAAIb,IAAI,CAACC,KAAK,EAAE;QACZC,QAAQ,CAACF,IAAI,CAACC,KAAK,CAAC;MACxB,CAAC,MACI;QACDC,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CACD,OAAOY,KAAK,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;IAC/B;IACAb,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMc,eAAe,GAAG,MAAM;IAC1BN,UAAU,CAACb,aAAa,CAAC;EAC7B,CAAC;EAED,MAAMoB,UAAU,GAAG,MAAK;IACpBX,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMY,cAAc,GAAIC,MAAM,IAAI;IAC9B,MAAMC,eAAe,GAAG3B,SAAS,CAAC4B,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACtE,IAAGC,eAAe,EAAE;IAEpB,MAAME,IAAI,GAAGvB,KAAK,CAACsB,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACvD,MAAMI,eAAe,GAAG,CAAC,GAAG9B,SAAS,EAAC6B,IAAI,CAAC;IAC3Cb,YAAY,CAACc,eAAe,CAAC;IAC7BhC,YAAY,CAACiC,OAAO,CAAC,WAAW,EAACC,IAAI,CAACC,SAAS,CAACH,eAAe,CAAC,CAAC;EACrE,CAAC;EAED,MAAMI,mBAAmB,GAAIR,MAAM,IAAI;IACnC,MAAMS,gBAAgB,GAAGnC,SAAS,CAACoC,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACzEV,YAAY,CAACmB,gBAAgB,CAAC;IAC9BrC,YAAY,CAACiC,OAAO,CAAC,WAAW,EAACC,IAAI,CAACC,SAAS,CAACE,gBAAgB,CAAC,CAAC;EACtE,CAAC;EAGD5C,SAAS,CAAC,MAAM;IACZ0B,UAAU,CAACd,WAAW,CAAC;EAE3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkC,UAAU,GAAG,CAACX,MAAM,EAAGY,aAAa,KAAK;IAE3C,IAAIT,IAAI;IACR,IAAGS,aAAa,EAAC;MACbT,IAAI,GAAG7B,SAAS,CAAC4B,IAAI,CAAGC,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IAC5D,CAAC,MACG;MACAG,IAAI,GAAGvB,KAAK,CAACsB,IAAI,CAAGC,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,CAAC;IACxD;IACAX,eAAe,CAACc,IAAI,CAAC;IACrBhB,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAGDtB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACmB,UAAU,EAAE;MACb;IACJ;IACAO,UAAU,CAAE,GAAEd,WAAY,GAAEO,UAAW,EAAC,CAAC;EAC7C,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEF,OAAO;MAAEF,KAAK;MAAEK,aAAa;MAAEY,eAAe;MAAIX,SAAS;MAAGE,YAAY;MAAGuB,UAAU;MACpHb,UAAU;MAAGC,cAAc;MAAGS,mBAAmB;MAAGlC;IAAW,CAAE;IAAA,UAC7DE;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE9B,CAAC;AAAA,GApGKD,WAAW;AAAA,KAAXA,WAAW;AAsGjB,OAAO,MAAMsC,gBAAgB,GAAG,MAAM;EAAA;EAClC,OAAOjD,UAAU,CAACI,UAAU,CAAC;AACjC,CAAC;AAAA,IAFY6C,gBAAgB;AAK7B,SAAS7C,UAAU,EAAEO,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}